@model ContactManager.ViewModels.ContactIndexViewModel

@{
    ViewData["Title"] = "Contact Manager";
}

<div class="container-fluid mt-4">
    <div class="row">
        <div class="col-12">
            <!-- Header Section -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h1 class="h2 text-primary mb-1">
                        <i class="fas fa-address-book me-2"></i>Contact Manager
                    </h1>
                    <small class="text-muted">
                        @Model.TotalContacts total contacts (@Model.FavoriteContacts favorites)
                    </small>
                </div>
                <div class="d-flex gap-2">
                    <div class="dropdown">
                        <button class="btn btn-outline-primary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                            <i class="fas fa-download me-1"></i>Export
                        </button>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" asp-action="ExportCsv">
                                <i class="fas fa-file-csv me-2"></i>Export to CSV
                            </a></li>
                            <li><a class="dropdown-item" asp-action="ExportXml">
                                <i class="fas fa-file-code me-2"></i>Export to XML
                            </a></li>
                        </ul>
                    </div>
                    <a asp-action="Import" class="btn btn-outline-info">
                        <i class="fas fa-file-import me-1"></i>Import XML
                    </a>
                    <a asp-action="Create" class="btn btn-success">
                        <i class="fas fa-plus me-1"></i>Add New Contact
                    </a>
                </div>
            </div>

            <!-- Toast Messages -->
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="toast-container position-fixed top-0 end-0 p-3">
                    <div class="toast show" role="alert" data-bs-autohide="true" data-bs-delay="5000">
                        <div class="toast-header bg-success text-white">
                            <i class="fas fa-check-circle me-2"></i>
                            <strong class="me-auto">Success</strong>
                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast"></button>
                        </div>
                        <div class="toast-body">
                            @TempData["SuccessMessage"]
                        </div>
                    </div>
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="toast-container position-fixed top-0 end-0 p-3">
                    <div class="toast show" role="alert" data-bs-autohide="true" data-bs-delay="5000">
                        <div class="toast-header bg-danger text-white">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            <strong class="me-auto">Error</strong>
                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast"></button>
                        </div>
                        <div class="toast-body">
                            @TempData["ErrorMessage"]
                        </div>
                    </div>
                </div>
            }

            <!-- Search and Filter Section -->
            <div class="card mb-4 shadow-sm">
                <div class="card-body">
                    <form asp-action="Index" method="get" class="row g-3">
                        <div class="col-md-6">
                            <div class="input-group">
                                <span class="input-group-text bg-light">
                                    <i class="fas fa-search text-muted"></i>
                                </span>
                                <input type="text" name="searchString" value="@Model.SearchString" 
                                       class="form-control" placeholder="Search by name, email, or phone..." />
                            </div>
                        </div>
                        <div class="col-md-3">
                            <select name="filterType" class="form-select">
                                <option value="all" selected="@(Model.FilterType == "all")">All Contacts</option>
                                <option value="favorites" selected="@(Model.FilterType == "favorites")">Favorites Only</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <div class="btn-group w-100" role="group">
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-search me-1"></i>Search
                                </button>
                                <a asp-action="Index" class="btn btn-outline-secondary">
                                    <i class="fas fa-times me-1"></i>Clear
                                </a>
                            </div>
                        </div>
                    </form>
                </div>
            </div>

            @if (Model.Contacts.Any())
            {
                <!-- Contacts Grid -->
                <div class="row g-4 mb-4">
                    @foreach (var contact in Model.Contacts)
                    {
                        <div class="col-lg-4 col-md-6">
                            <div class="card h-100 shadow-sm contact-card">
                                <div class="card-body">
                                    <div class="d-flex align-items-start mb-3">
                                        <div class="flex-shrink-0 me-3">
                                            @if (!string.IsNullOrEmpty(contact.ProfilePhotoPath))
                                            {
                                                <img src="@contact.ProfilePhotoPath" alt="@contact.Name" 
                                                     class="rounded-circle contact-avatar" style="width: 60px; height: 60px; object-fit: cover;" />
                                            }
                                            else
                                            {
                                                <div class="rounded-circle bg-primary text-white d-flex align-items-center justify-content-center contact-avatar" 
                                                     style="width: 60px; height: 60px; font-size: 1.5rem; font-weight: bold;">
                                                    @contact.Name.Substring(0, 1).ToUpper()
                                                </div>
                                            }
                                        </div>
                                        <div class="flex-grow-1">
                                            <div class="d-flex justify-content-between align-items-start">
                                                <h5 class="card-title mb-1">@contact.Name</h5>
                                                <button class="btn btn-sm btn-link p-0 favorite-btn" 
                                                        data-contact-id="@contact.Id" 
                                                        data-is-favorite="@contact.IsFavorite.ToString().ToLower()"
                                                        title="@(contact.IsFavorite ? "Remove from favorites" : "Add to favorites")">
                                                    <i class="@(contact.IsFavorite ? "fas fa-heart text-danger" : "far fa-heart text-muted")"></i>
                                                </button>
                                            </div>
                                            <small class="text-muted">
                                                Added @contact.DateCreated.ToString("MMM dd, yyyy")
                                            </small>
                                        </div>
                                    </div>
                                    
                                    <div class="contact-details mb-3">
                                        <div class="mb-2">
                                            <i class="fas fa-envelope text-primary me-2"></i>
                                            <a href="mailto:@contact.Email" class="text-decoration-none">
                                                @contact.Email
                                            </a>
                                        </div>
                                        <div class="mb-2">
                                            <i class="fas fa-phone text-success me-2"></i>
                                            <a href="tel:@contact.Phone" class="text-decoration-none">
                                                @contact.Phone
                                            </a>
                                        </div>
                                        @if (!string.IsNullOrEmpty(contact.Address))
                                        {
                                            <div class="mb-2">
                                                <i class="fas fa-map-marker-alt text-info me-2"></i>
                                                <span class="text-muted">@contact.Address</span>
                                            </div>
                                        }
                                    </div>
                                </div>
                                <div class="card-footer bg-transparent">
                                    <div class="btn-group w-100" role="group">
                                        <a asp-action="Details" asp-route-id="@contact.Id" 
                                           class="btn btn-outline-info btn-sm" title="View Details">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@contact.Id" 
                                           class="btn btn-outline-warning btn-sm" title="Edit">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <button type="button" class="btn btn-outline-danger btn-sm delete-btn" 
                                                data-contact-id="@contact.Id" 
                                                data-contact-name="@contact.Name" 
                                                title="Delete">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- Pagination -->
                @if (Model.TotalPages > 1)
                {
                    <nav aria-label="Contacts pagination">
                        <ul class="pagination justify-content-center">
                            <!-- Previous -->
                            <li class="page-item @(Model.PageNumber <= 1 ? "disabled" : "")">
                                <a class="page-link" 
                                   asp-action="Index" 
                                   asp-route-searchString="@Model.SearchString"
                                   asp-route-filterType="@Model.FilterType"
                                   asp-route-page="@(Model.PageNumber - 1)">
                                    <i class="fas fa-chevron-left"></i>
                                </a>
                            </li>

                            <!-- Page Numbers -->
                            @for (int i = Math.Max(1, Model.PageNumber - 2); i <= Math.Min(Model.TotalPages, Model.PageNumber + 2); i++)
                            {
                                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                                    <a class="page-link" 
                                       asp-action="Index" 
                                       asp-route-searchString="@Model.SearchString"
                                       asp-route-filterType="@Model.FilterType"
                                       asp-route-page="@i">
                                        @i
                                    </a>
                                </li>
                            }

                            <!-- Next -->
                            <li class="page-item @(Model.PageNumber >= Model.TotalPages ? "disabled" : "")">
                                <a class="page-link" 
                                   asp-action="Index" 
                                   asp-route-searchString="@Model.SearchString"
                                   asp-route-filterType="@Model.FilterType"
                                   asp-route-page="@(Model.PageNumber + 1)">
                                    <i class="fas fa-chevron-right"></i>
                                </a>
                            </li>
                        </ul>
                    </nav>
                }
            }
            else
            {
                <div class="card text-center shadow-sm">
                    <div class="card-body py-5">
                        <i class="fas fa-address-book fa-3x text-muted mb-3"></i>
                        <h4 class="text-muted">No contacts found</h4>
                        @if (!string.IsNullOrEmpty(Model.SearchString) || Model.FilterType == "favorites")
                        {
                            <p class="text-muted">
                                @if (!string.IsNullOrEmpty(Model.SearchString))
                                {
                                    <span>No contacts match your search criteria for "@Model.SearchString".</span>
                                }
                                else
                                {
                                    <span>No favorite contacts found.</span>
                                }
                            </p>
                            <a asp-action="Index" class="btn btn-secondary me-2">
                                <i class="fas fa-list me-1"></i>Show All Contacts
                            </a>
                        }
                        else
                        {
                            <p class="text-muted">Start building your contact list!</p>
                        }
                        <a asp-action="Create" class="btn btn-success">
                            <i class="fas fa-plus me-1"></i>Add Your First Contact
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteModalLabel">
                    <i class="fas fa-exclamation-triangle me-2"></i>Confirm Delete
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete <strong id="contactNameToDelete"></strong>?</p>
                <p class="text-muted">This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-1"></i>Cancel
                </button>
                <form id="deleteForm" method="post" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash me-1"></i>Delete Contact
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<style>
.contact-card {
    transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
}

.contact-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;
}

.contact-avatar {
    border: 2px solid #e9ecef;
}

.favorite-btn {
    transition: color 0.2s ease-in-out;
}

.favorite-btn:hover {
    color: #dc3545 !important;
}

.toast-container {
    z-index: 1055;
}
</style>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Handle delete confirmation
            document.querySelectorAll('.delete-btn').forEach(function(btn) {
                btn.addEventListener('click', function() {
                    const contactId = this.getAttribute('data-contact-id');
                    const contactName = this.getAttribute('data-contact-name');
                    
                    document.getElementById('contactNameToDelete').textContent = contactName;
                    document.getElementById('deleteForm').action = '@Url.Action("Delete")/' + contactId;
                    
                    new bootstrap.Modal(document.getElementById('deleteModal')).show();
                });
            });

            // Handle favorite toggle
            document.querySelectorAll('.favorite-btn').forEach(function(btn) {
                btn.addEventListener('click', function() {
                    const contactId = this.getAttribute('data-contact-id');
                    const isFavorite = this.getAttribute('data-is-favorite') === 'true';
                    
                    fetch('@Url.Action("ToggleFavorite")', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                        },
                        body: JSON.stringify({ id: contactId })
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            const icon = this.querySelector('i');
                            if (data.isFavorite) {
                                icon.className = 'fas fa-heart text-danger';
                                this.setAttribute('data-is-favorite', 'true');
                                this.title = 'Remove from favorites';
                            } else {
                                icon.className = 'far fa-heart text-muted';
                                this.setAttribute('data-is-favorite', 'false');
                                this.title = 'Add to favorites';
                            }
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
                });
            });

            // Auto-hide toasts
            document.querySelectorAll('.toast').forEach(function(toast) {
                new bootstrap.Toast(toast).show();
            });
        });
    </script>
}
